query_id = 6
parse_time = 3.155259
exec_time = 0.515893
comp_time = 0.12119
gen_length = 4213
generated_sql = """

WITH 
serval as (
SELECT
    store_sales.\"SS_CUSTOMER_SK\" as \"store_sales_customer_id\",
    store_sales.\"SS_ITEM_SK\" as \"item_id\",
    store_sales.\"SS_SOLD_DATE_SK\" as \"store_sales_date_id\"
FROM
    memory.store_sales as store_sales
GROUP BY 
    store_sales.\"SS_SOLD_DATE_SK\",
    store_sales.\"SS_CUSTOMER_SK\",
    store_sales.\"SS_ITEM_SK\"),
chicken as (
SELECT
    store_returns.\"SR_CUSTOMER_SK\" as \"store_sales_customer_id\",
    store_returns.\"SR_ITEM_SK\" as \"item_id\"
FROM
    memory.store_returns as store_returns
GROUP BY 
    store_returns.\"SR_CUSTOMER_SK\",
    store_returns.\"SR_ITEM_SK\"),
friendly as (
SELECT
    items.\"I_CURRENT_PRICE\" as \"item_current_price\",
    items.\"I_CATEGORY\" as \"item_category\",
    items.\"I_ITEM_SK\" as \"item_id\"
FROM
    memory.item as items
WHERE
    items.\"I_CATEGORY\" is not null
),
shark as (
SELECT
    avg(items.\"I_CURRENT_PRICE\") as \"_virtual_6264207893106521\",
    items.\"I_CATEGORY\" as \"item_category\"
FROM
    memory.item as items
WHERE
    items.\"I_CATEGORY\" is not null

GROUP BY 
    items.\"I_CATEGORY\"),
cheetah as (
SELECT
    friendly.\"item_category\" as \"item_category\",
    customers.\"C_CUSTOMER_SK\" as \"store_sales_customer_id\",
    cast(\"D_YEAR\" as int) as \"store_sales_date_year\",
    date.\"D_MOY\" as \"store_sales_date_month_of_year\",
    items.\"I_CURRENT_PRICE\" as \"store_sales_item_current_price\",
    customer_address.\"CA_STATE\" as \"store_sales_customer_state\"
FROM
    serval
    LEFT OUTER JOIN chicken on serval.\"store_sales_customer_id\" = chicken.\"store_sales_customer_id\" AND serval.\"item_id\" = chicken.\"item_id\"
    INNER JOIN memory.customer as customers on serval.\"store_sales_customer_id\" = customers.\"C_CUSTOMER_SK\"
    INNER JOIN memory.item as items on serval.\"item_id\" = items.\"I_ITEM_SK\"
    INNER JOIN friendly on serval.\"item_id\" = friendly.\"item_id\"
    INNER JOIN memory.date_dim as date on serval.\"store_sales_date_id\" = date.\"D_DATE_SK\"
    INNER JOIN memory.customer_address as customer_address on customers.\"C_CURRENT_ADDR_SK\" = customer_address.\"CA_ADDRESS_SK\"
WHERE
    cast(\"D_YEAR\" as int) = 2001 and date.\"D_MOY\" = 1 and friendly.\"item_category\" is not null
),
crocodile as (
SELECT
    cheetah.\"store_sales_customer_id\" as \"store_sales_customer_id_filter_5640408687474034\",
    cheetah.\"store_sales_date_year\" as \"store_sales_date_year\",
    cheetah.\"store_sales_date_month_of_year\" as \"store_sales_date_month_of_year\",
    cheetah.\"store_sales_item_current_price\" as \"store_sales_item_current_price\",
    shark.\"_virtual_6264207893106521\" as \"_virtual_6264207893106521\",
    cheetah.\"item_category\" as \"item_category\",
    cheetah.\"store_sales_customer_state\" as \"store_sales_customer_state\"
FROM
    cheetah
    INNER JOIN shark on (cheetah.\"item_category\" = shark.\"item_category\" or (cheetah.\"item_category\" is null and shark.\"item_category\" is null))
WHERE
    cheetah.\"store_sales_date_year\" = 2001 and cheetah.\"store_sales_date_month_of_year\" = 1 and cheetah.\"store_sales_item_current_price\" > 1.2 * shark.\"_virtual_6264207893106521\" and cheetah.\"item_category\" is not null
),
marlin as (
SELECT
    crocodile.\"store_sales_customer_id_filter_5640408687474034\" as \"store_sales_customer_id_filter_5640408687474034\",
    crocodile.\"store_sales_customer_state\" as \"store_sales_customer_state\",
    crocodile.\"store_sales_date_year\" as \"store_sales_date_year\",
    crocodile.\"store_sales_date_month_of_year\" as \"store_sales_date_month_of_year\",
    crocodile.\"store_sales_item_current_price\" as \"store_sales_item_current_price\",
    crocodile.\"_virtual_6264207893106521\" as \"_virtual_6264207893106521\",
    crocodile.\"item_category\" as \"item_category\"
FROM
    crocodile),
dynamic as (
SELECT
    count(marlin.\"store_sales_customer_id_filter_5640408687474034\") as \"customer_count\",
    marlin.\"store_sales_customer_state\" as \"store_sales_customer_state\"
FROM
    marlin
GROUP BY 
    marlin.\"store_sales_customer_state\")
SELECT
    dynamic.\"store_sales_customer_state\" as \"store_sales_customer_state\",
    dynamic.\"customer_count\" as \"customer_count\"
FROM
    dynamic
WHERE
    dynamic.\"customer_count\" >= 10

ORDER BY 
    dynamic.\"customer_count\" asc nulls first,
    dynamic.\"store_sales_customer_state\" asc nulls first"""
