import item as item;
import date as date;
import date as ship_date;
import date as sold_date;
import time as time;
import customer as customer;
import customer as bill_customer;
import call_center as call_center;
import warehouse as warehouse;
import customer_demographic as bill_customer_demographic;
import promotion as promotion;
import ship_mode as ship_mode;

key warehouse_id int;

key order_number int;
property <order_number,item.id>.quantity int;
property <order_number,item.id>.sales_price float;
property <order_number,item.id>.list_price float;
property <order_number,item.id>.wholesale_cost float;
property <order_number,item.id>.discount_amount float;
property <order_number,item.id>.extra_sales_price float;
property <order_number,item.id>.extra_ship_cost float;
property <order_number,item.id>.extra_wholesale_cost float;
property <order_number,item.id>.net_profit float;
property <order_number,item.id>.coupon_amt float;

# equivalent keys
property <order_number,item.id>._sold_date_id date;
merge sold_date.id into _sold_date_id;

property <order_number,item.id>._date_id date;
merge date.id into _date_id;

property <order_number,item.id>._ship_date_id date;
merge ship_date.id into _ship_date_id;

property <order_number,item.id>._bill_customer_id int;
merge bill_customer.id into _bill_customer_id;


# metrics
property <order_number,item.id>.profit <- list_price - wholesale_cost - discount_amount+ extra_sales_price;
property <order_number, item.id>.days_to_ship <- date_diff(sold_date.date, ship_date.date, DAY);


datasource catalog_sales (
    CS_SOLD_DATE_SK: _date_id,
    CS_SOLD_DATE_SK: _sold_date_id,
    CS_SOLD_TIME_SK: time.id,
    CS_SHIP_DATE_SK: ship_date.id,
    CS_SHIP_CUSTOMER_SK: customer.id,
    CS_SHIP_ADDR_SK: customer.address_id,
    CS_BILL_CUSTOMER_SK: _bill_customer_id,
    CS_BILL_CDEMO_SK: bill_customer_demographic.id,
    CS_ITEM_SK: item.id,
    CS_QUANTITY: quantity,
    CS_LIST_PRICE: list_price,
    CS_SALES_PRICE: sales_price,
    CS_ORDER_NUMBER: order_number,
    CS_WHOLESALE_COST:  wholesale_cost,
    CS_EXT_WHOLESALE_COST: extra_wholesale_cost,
    CS_CALL_CENTER_SK: ?call_center.id,
    CS_EXT_SHIP_COST: extra_ship_cost,
    CS_EXT_SALES_PRICE: extra_sales_price,
    CS_NET_PROFIT: net_profit,
    CS_COUPON_AMT: coupon_amt,
    CS_WAREHOUSE_SK: warehouse.id,
    CS_PROMO_SK: promotion.id,
    CS_SHIP_MODE_SK: ship_mode.id,

)
grain (order_number, item.id)
address memory.catalog_sales
;