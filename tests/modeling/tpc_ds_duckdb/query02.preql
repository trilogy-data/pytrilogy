import catalog_sales as catalog_sales;
import web_sales as web_sales;
import date as date;

merge catalog_sales.date.* into ~date.*;
merge web_sales.date.* into ~date.*;

auto relevent_week_seq <- filter date.week_seq where date.year in (2001, 2002);

def weekday_sales(weekday) ->  
    SUM(CASE WHEN date.day_of_week = weekday THEN web_sales.extra_sales_price ELSE 0.0 END) + 
    SUM(CASE WHEN date.day_of_week = weekday THEN catalog_sales.extra_sales_price ELSE 0.0 END)
;

WITH
    yearly_agg AS
WHERE
    date.week_seq in relevent_week_seq
SELECT
    date.week_seq,
    @weekday_sales(0) as sunday_sales,
    @weekday_sales(1) as monday_sales,
    @weekday_sales(2) as tuesday_sales,
    @weekday_sales(3) as wednesday_sales,
    @weekday_sales(4) as thursday_sales,
    @weekday_sales(5) as friday_sales,
    @weekday_sales(6) as saturday_sales,
;

def round_lag(sales)-> round(sales / (lead 53 sales by yearly_agg.date.week_seq asc), 2);


SELECT
    yearly_agg.date.week_seq,
    @round_lag(yearly_agg.sunday_sales) as sunday_increase,
    @round_lag(yearly_agg.monday_sales) as monday_increase,
    @round_lag(yearly_agg.tuesday_sales) as tuesday_increase,
    @round_lag(yearly_agg.wednesday_sales) as wednesday_increase,
    @round_lag(yearly_agg.thursday_sales) as thursday_increase,
    @round_lag(yearly_agg.friday_sales) as friday_increase,
    @round_lag(yearly_agg.saturday_sales) as saturday_increase
    # -- (lead 53 yearly_agg.sunday_sales by yearly_agg.date.week_seq asc) -> filter_flag,
having 
    sunday_increase is not null
ORDER BY 
     yearly_agg.date.week_seq asc NULLS FIRST
LIMIT 100;