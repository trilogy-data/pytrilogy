query_id = 25
parse_time = 33.343606
exec_time = 0.292096
comp_time = 0.066124
gen_length = 8573
generated_sql = """

WITH 
goldfinch as (
SELECT
    cast(\"D_YEAR\" as int) as \"store_sales_return_date_year\",
    date.\"D_MOY\" as \"store_sales_return_date_month_of_year\",
    date.\"D_DATE_SK\" as \"store_sales_return_date_id\"
FROM
    memory.date_dim as date
WHERE
    cast(\"D_YEAR\" as int) = 2001 and date.\"D_MOY\" >= 4 and date.\"D_MOY\" <= 10
),
trite as (
SELECT
    cast(\"D_YEAR\" as int) as \"catalog_sales_date_year\",
    date.\"D_MOY\" as \"catalog_sales_date_month_of_year\",
    date.\"D_DATE_SK\" as \"catalog_sales_date_id\"
FROM
    memory.date_dim as date
WHERE
    cast(\"D_YEAR\" as int) = 2001 and date.\"D_MOY\" >= 4 and date.\"D_MOY\" <= 10
),
loon as (
SELECT
    customers.\"C_CUSTOMER_SK\" as \"store_sales_customer_id\"
FROM
    memory.customer as customers),
rambunctious as (
SELECT
    catalog_sales.\"CS_BILL_CUSTOMER_SK\" as \"store_sales_customer_id\",
    catalog_sales.\"CS_ITEM_SK\" as \"store_sales_item_id\",
    catalog_sales.\"CS_SOLD_DATE_SK\" as \"catalog_sales_date_id\"
FROM
    memory.catalog_sales as catalog_sales
GROUP BY 
    catalog_sales.\"CS_SOLD_DATE_SK\",
    catalog_sales.\"CS_ITEM_SK\",
    catalog_sales.\"CS_BILL_CUSTOMER_SK\"),
obsolete as (
SELECT
    catalog_sales.\"CS_NET_PROFIT\" as \"catalog_sales_net_profit\",
    cast(\"D_YEAR\" as int) as \"store_sales_date_year\",
    date.\"D_MOY\" as \"store_sales_date_month_of_year\",
    goldfinch.\"store_sales_return_date_year\" as \"store_sales_return_date_year\",
    goldfinch.\"store_sales_return_date_month_of_year\" as \"store_sales_return_date_month_of_year\",
    trite.\"catalog_sales_date_year\" as \"catalog_sales_date_year\",
    trite.\"catalog_sales_date_month_of_year\" as \"catalog_sales_date_month_of_year\",
    customers.\"C_CUSTOMER_SK\" as \"store_sales_return_customer_id\",
    store_sales.\"SS_CUSTOMER_SK\" as \"store_sales_customer_id\",
    CASE WHEN store_returns.\"SR_RETURN_TIME_SK\" THEN TRUE ELSE FALSE END as \"store_sales_is_returned\",
    items.\"I_ITEM_DESC\" as \"store_sales_item_desc\",
    items.\"I_ITEM_ID\" as \"store_sales_item_name\",
    store.\"S_STORE_NAME\" as \"store_sales_store_name\",
    store.\"S_STORE_ID\" as \"store_sales_store_text_id\",
    catalog_sales.\"CS_ORDER_NUMBER\" as \"catalog_sales_order_number\",
    items.\"I_ITEM_SK\" as \"store_sales_item_id\"
FROM
    memory.store_sales as store_sales
    INNER JOIN memory.catalog_sales as catalog_sales on store_sales.\"SS_CUSTOMER_SK\" = catalog_sales.\"CS_BILL_CUSTOMER_SK\" AND store_sales.\"SS_ITEM_SK\" = catalog_sales.\"CS_ITEM_SK\"
    INNER JOIN loon on store_sales.\"SS_CUSTOMER_SK\" = loon.\"store_sales_customer_id\"
    INNER JOIN memory.date_dim as date on store_sales.\"SS_SOLD_DATE_SK\" = date.\"D_DATE_SK\"
    LEFT OUTER JOIN memory.store_returns as store_returns on store_sales.\"SS_ITEM_SK\" = store_returns.\"SR_ITEM_SK\" AND store_sales.\"SS_TICKET_NUMBER\" = store_returns.\"SR_TICKET_NUMBER\"
    INNER JOIN memory.item as items on store_sales.\"SS_ITEM_SK\" = items.\"I_ITEM_SK\"
    INNER JOIN memory.store as store on store_sales.\"SS_STORE_SK\" = store.\"S_STORE_SK\"
    LEFT OUTER JOIN memory.customer as customers on store_returns.\"SR_CUSTOMER_SK\" = customers.\"C_CUSTOMER_SK\"
    LEFT OUTER JOIN goldfinch on store_returns.\"SR_RETURNED_DATE_SK\" = goldfinch.\"store_sales_return_date_id\"
    LEFT OUTER JOIN trite on catalog_sales.\"CS_SOLD_DATE_SK\" = trite.\"catalog_sales_date_id\"
WHERE
    cast(\"D_YEAR\" as int) = 2001 and date.\"D_MOY\" = 4 and goldfinch.\"store_sales_return_date_year\" = 2001 and goldfinch.\"store_sales_return_date_month_of_year\" >= 4 and goldfinch.\"store_sales_return_date_month_of_year\" <= 10 and trite.\"catalog_sales_date_year\" = 2001 and trite.\"catalog_sales_date_month_of_year\" >= 4 and trite.\"catalog_sales_date_month_of_year\" <= 10 and customers.\"C_CUSTOMER_SK\" = store_sales.\"SS_CUSTOMER_SK\" and CASE WHEN store_returns.\"SR_RETURN_TIME_SK\" THEN TRUE ELSE FALSE END
),
ostrich as (
SELECT
    store_sales.\"SS_NET_PROFIT\" as \"store_sales_net_profit\",
    cast(\"D_YEAR\" as int) as \"store_sales_date_year\",
    date.\"D_MOY\" as \"store_sales_date_month_of_year\",
    goldfinch.\"store_sales_return_date_year\" as \"store_sales_return_date_year\",
    goldfinch.\"store_sales_return_date_month_of_year\" as \"store_sales_return_date_month_of_year\",
    trite.\"catalog_sales_date_year\" as \"catalog_sales_date_year\",
    trite.\"catalog_sales_date_month_of_year\" as \"catalog_sales_date_month_of_year\",
    customers.\"C_CUSTOMER_SK\" as \"store_sales_return_customer_id\",
    store_sales.\"SS_CUSTOMER_SK\" as \"store_sales_customer_id\",
    CASE WHEN store_returns.\"SR_RETURN_TIME_SK\" THEN TRUE ELSE FALSE END as \"store_sales_is_returned\",
    items.\"I_ITEM_DESC\" as \"store_sales_item_desc\",
    items.\"I_ITEM_ID\" as \"store_sales_item_name\",
    store.\"S_STORE_NAME\" as \"store_sales_store_name\",
    store.\"S_STORE_ID\" as \"store_sales_store_text_id\",
    store_sales.\"SS_TICKET_NUMBER\" as \"store_sales_ticket_number\",
    items.\"I_ITEM_SK\" as \"store_sales_item_id\",
    store_returns.\"SR_NET_LOSS\" as \"store_sales_return_net_loss\"
FROM
    rambunctious
    INNER JOIN memory.store_sales as store_sales on rambunctious.\"store_sales_customer_id\" = store_sales.\"SS_CUSTOMER_SK\" AND rambunctious.\"store_sales_item_id\" = store_sales.\"SS_ITEM_SK\"
    LEFT OUTER JOIN memory.store_returns as store_returns on rambunctious.\"store_sales_item_id\" = store_returns.\"SR_ITEM_SK\"
    INNER JOIN memory.item as items on rambunctious.\"store_sales_item_id\" = items.\"I_ITEM_SK\"
    INNER JOIN trite on rambunctious.\"catalog_sales_date_id\" = trite.\"catalog_sales_date_id\"
    INNER JOIN memory.store as store on store_sales.\"SS_STORE_SK\" = store.\"S_STORE_SK\"
    INNER JOIN memory.date_dim as date on store_sales.\"SS_SOLD_DATE_SK\" = date.\"D_DATE_SK\"
    LEFT OUTER JOIN memory.customer as customers on store_returns.\"SR_CUSTOMER_SK\" = customers.\"C_CUSTOMER_SK\"
    LEFT OUTER JOIN goldfinch on store_returns.\"SR_RETURNED_DATE_SK\" = goldfinch.\"store_sales_return_date_id\"
WHERE
    cast(\"D_YEAR\" as int) = 2001 and date.\"D_MOY\" = 4 and goldfinch.\"store_sales_return_date_year\" = 2001 and goldfinch.\"store_sales_return_date_month_of_year\" >= 4 and goldfinch.\"store_sales_return_date_month_of_year\" <= 10 and trite.\"catalog_sales_date_year\" = 2001 and trite.\"catalog_sales_date_month_of_year\" >= 4 and trite.\"catalog_sales_date_month_of_year\" <= 10 and customers.\"C_CUSTOMER_SK\" = store_sales.\"SS_CUSTOMER_SK\" and CASE WHEN store_returns.\"SR_RETURN_TIME_SK\" THEN TRUE ELSE FALSE END
),
snipe as (
SELECT
    sum(obsolete.\"catalog_sales_net_profit\") as \"catalog_sales_profit\",
    obsolete.\"store_sales_item_desc\" as \"store_sales_item_desc\",
    obsolete.\"store_sales_item_name\" as \"store_sales_item_name\",
    obsolete.\"store_sales_store_name\" as \"store_sales_store_name\",
    obsolete.\"store_sales_store_text_id\" as \"store_sales_store_text_id\"
FROM
    obsolete
GROUP BY 
    obsolete.\"store_sales_store_name\",
    obsolete.\"store_sales_item_desc\",
    obsolete.\"store_sales_store_text_id\",
    obsolete.\"store_sales_item_name\"),
nondescript as (
SELECT
    sum(ostrich.\"store_sales_net_profit\") as \"store_sales_profit\",
    ostrich.\"store_sales_item_desc\" as \"store_sales_item_desc\",
    ostrich.\"store_sales_item_name\" as \"store_sales_item_name\",
    ostrich.\"store_sales_store_name\" as \"store_sales_store_name\",
    ostrich.\"store_sales_store_text_id\" as \"store_sales_store_text_id\",
    sum(ostrich.\"store_sales_return_net_loss\") as \"store_returns_loss\"
FROM
    ostrich
GROUP BY 
    ostrich.\"store_sales_store_text_id\",
    ostrich.\"store_sales_item_name\",
    ostrich.\"store_sales_item_desc\",
    ostrich.\"store_sales_store_name\")
SELECT
    snipe.\"store_sales_item_name\" as \"store_sales_item_name\",
    snipe.\"store_sales_item_desc\" as \"store_sales_item_desc\",
    snipe.\"store_sales_store_text_id\" as \"store_sales_store_text_id\",
    snipe.\"store_sales_store_name\" as \"store_sales_store_name\",
    nondescript.\"store_sales_profit\" as \"store_sales_profit\",
    nondescript.\"store_returns_loss\" as \"store_returns_loss\",
    snipe.\"catalog_sales_profit\" as \"catalog_sales_profit\"
FROM
    snipe
    INNER JOIN nondescript on (snipe.\"store_sales_item_desc\" = nondescript.\"store_sales_item_desc\" or (snipe.\"store_sales_item_desc\" is null and nondescript.\"store_sales_item_desc\" is null)) AND snipe.\"store_sales_item_name\" = nondescript.\"store_sales_item_name\" AND snipe.\"store_sales_store_name\" = nondescript.\"store_sales_store_name\" AND snipe.\"store_sales_store_text_id\" = nondescript.\"store_sales_store_text_id\"
ORDER BY 
    snipe.\"store_sales_item_name\" asc,
    snipe.\"store_sales_item_desc\" asc,
    snipe.\"store_sales_store_text_id\" asc,
    snipe.\"store_sales_store_name\" asc
LIMIT (100)"""
